{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.joinPath = exports.pathParts = exports.normalizePath = void 0;\n/** @hidden\n * Removes leading and trailing slashes from a path.\n *\n * @param path A path to normalize, in POSIX format.\n */\n\nfunction normalizePath(path) {\n  if (!path) {\n    return '';\n  }\n\n  return path.replace(/^\\//, '').replace(/\\/$/, '');\n}\n\nexports.normalizePath = normalizePath;\n/**\n * Normalizes a given path and splits it into an array of segments.\n *\n * @param path A path to split, in POSIX format.\n */\n\nfunction pathParts(path) {\n  if (!path || path === '' || path === '/') {\n    return [];\n  }\n\n  return normalizePath(path).split('/');\n}\n\nexports.pathParts = pathParts;\n/**\n * Normalizes given paths and joins these together using a POSIX separator.\n *\n * @param base A first path segment, in POSIX format.\n * @param child A second path segment, in POSIX format.\n */\n\nfunction joinPath(base, child) {\n  return pathParts(base).concat(pathParts(child)).join('/');\n}\n\nexports.joinPath = joinPath;","map":{"version":3,"sources":["/Users/aep/phd/hearth-mici/node_modules/firebase-functions/lib/utilities/path.js"],"names":["Object","defineProperty","exports","value","joinPath","pathParts","normalizePath","path","replace","split","base","child","concat","join"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmBF,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACI,aAAR,GAAwB,KAAK,CAApE;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,MAAI,CAACA,IAAL,EAAW;AACP,WAAO,EAAP;AACH;;AACD,SAAOA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,EAApB,EAAwBA,OAAxB,CAAgC,KAAhC,EAAuC,EAAvC,CAAP;AACH;;AACDN,OAAO,CAACI,aAAR,GAAwBA,aAAxB;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,SAAT,CAAmBE,IAAnB,EAAyB;AACrB,MAAI,CAACA,IAAD,IAASA,IAAI,KAAK,EAAlB,IAAwBA,IAAI,KAAK,GAArC,EAA0C;AACtC,WAAO,EAAP;AACH;;AACD,SAAOD,aAAa,CAACC,IAAD,CAAb,CAAoBE,KAApB,CAA0B,GAA1B,CAAP;AACH;;AACDP,OAAO,CAACG,SAAR,GAAoBA,SAApB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,QAAT,CAAkBM,IAAlB,EAAwBC,KAAxB,EAA+B;AAC3B,SAAON,SAAS,CAACK,IAAD,CAAT,CACFE,MADE,CACKP,SAAS,CAACM,KAAD,CADd,EAEFE,IAFE,CAEG,GAFH,CAAP;AAGH;;AACDX,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.joinPath = exports.pathParts = exports.normalizePath = void 0;\n/** @hidden\n * Removes leading and trailing slashes from a path.\n *\n * @param path A path to normalize, in POSIX format.\n */\nfunction normalizePath(path) {\n    if (!path) {\n        return '';\n    }\n    return path.replace(/^\\//, '').replace(/\\/$/, '');\n}\nexports.normalizePath = normalizePath;\n/**\n * Normalizes a given path and splits it into an array of segments.\n *\n * @param path A path to split, in POSIX format.\n */\nfunction pathParts(path) {\n    if (!path || path === '' || path === '/') {\n        return [];\n    }\n    return normalizePath(path).split('/');\n}\nexports.pathParts = pathParts;\n/**\n * Normalizes given paths and joins these together using a POSIX separator.\n *\n * @param base A first path segment, in POSIX format.\n * @param child A second path segment, in POSIX format.\n */\nfunction joinPath(base, child) {\n    return pathParts(base)\n        .concat(pathParts(child))\n        .join('/');\n}\nexports.joinPath = joinPath;\n"]},"metadata":{},"sourceType":"script"}
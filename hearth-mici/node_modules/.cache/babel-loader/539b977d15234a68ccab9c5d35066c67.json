{"ast":null,"code":"/* eslint eqeqeq: \"off\", no-unused-vars: \"off\" */\n//to fix totalHeight bug, change p5 by changing o-totalHeight to just o\n//todo: fix this on a generic p5 import somehow\n//todo: language stuff\n//todo: buttons\n//todo: creature types\n//todo: card types\n//todo: effect limit\n//ABC test reports, articulate logic for report design\n//make rampiness, variety, controllynes and see when they would be useful\nexport default function sketch(p) {\n  const buttons = [];\n  let button_id = 0;\n  const effects = [];\n  let current_task_index = 0;\n  const task_details = [{\n    id: 0,\n    title: \"Mage vs Warrior\",\n    instruction: \"Create 2 mage cards that helps against warriors.\",\n    num_cards: 2,\n    class: \"mage\"\n  }, {\n    id: 1,\n    title: \"Murlocs\",\n    instruction: \"Create 3 murlocs\",\n    num_cards: 3,\n    class: \"shaman\"\n  }, {\n    id: 2,\n    title: \"The ultimate defense\",\n    instruction: \"Create the ultimate defensive card.\",\n    num_cards: 1,\n    class: \"warrior\"\n  }];\n  let user = \"\";\n  let tasks = [];\n  const card_types = [\"spell\", \"minion\", \"weapon\"];\n  const method_names = [\"randomly\", \"targeted\", \"all\", \"aura\"];\n  const target_names = [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\", \"weapons\"];\n  const target_names_singular = [\"minion\", \"hero\", \"minion or hero\", \"murloc\", \"beast\", \"demon\", \"totem\", \"weapon\"];\n  const filter_names = [\"enemy\", \"friendly\", \"all\"];\n  const duration_names = [\"turn\", \"permanently\"];\n  const param_format_names = [\"x\", \"x/x\", \"k\", \"c\"];\n  const effect_names = [\"Deal damage\", \"Destroy\", \"Heal\", \"Gain armour\", \"Change stats\", \"Set stats\", \"Give keyword\", \"Return to hand\", \"Draw\", \"Gain mana\", \"Summon: \", \"Battlecry: \", \"Deathrattle: \"];\n  const keywords = [\"Taunt\", \"Charge\", \"Lifesteal\", \"Spell damage +1\", \"Divine shield\", \"Poisonous\", \"Windfury\", \"Frozen\"];\n  const all_creature_types = [\"murloc\", \"beast\", \"demon\", \"totem\", \"dragon\", \"pirate\", \"mech\", \"elemental\"];\n  const creature_types = [\"Murloc\", \"Beast\", \"Demon\", \"Totem\"];\n  const survey_topics = [\"none\", \"methods\", \"filters\", \"targets\", \"duration\", \"params\"];\n  let current_survey_topic = 0;\n  let survey_drop_target = null;\n  const font_pixels_large = 32;\n  const font_pixels = 24;\n  const font_pixels_small = 20;\n  let hearthstone_font;\n  const mouse_padding = 1;\n  let w_padding, h_padding;\n  let grid_w_padding, grid_h_padding;\n  let rect_mask, ellipse_mask;\n  let blank_spell_img, blank_creature_img, blank_weapon_img, full_blank_creature_img;\n  let bg;\n  let gan_imgs = [];\n  let the_mouse;\n  let setup_done = false;\n  let hovered_option = -1;\n  let editing = \"none\";\n  let editing_card = null;\n  let effect_to_remove = null;\n  let editX = 0;\n  let editY = 0;\n  let sending = false;\n  let send_start_time = -10000;\n  const estimated_send_duration = 3000; //over-estimate\n\n  let sent = false;\n  let mouse_over_queuer;\n  let mouse_over_next;\n  let mouse_over_prev;\n  let props;\n\n  p.myCustomRedrawAccordingToNewPropsHandler = _props => {\n    props = _props;\n  };\n\n  p.preload = () => {\n    bg = p.loadImage(props.bg_img);\n    blank_spell_img = p.loadImage(props.spell_img);\n    blank_weapon_img = p.loadImage(props.weapon_img);\n    blank_creature_img = p.loadImage(props.creature_img);\n    full_blank_creature_img = p.loadImage(props.full_blank_creature_img);\n    hearthstone_font = p.loadFont(props.hs_font);\n\n    for (let im of props.gan_imgs) {\n      gan_imgs.push(p.loadImage(im));\n    }\n  };\n\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n    user = p.getURLParams().user;\n    the_mouse = new p.FancyMouse();\n    h_padding = p.height * 0.1;\n    w_padding = p.width * 0.2;\n    grid_h_padding = p.height * 0.2;\n    grid_w_padding = p.width * 0.1;\n    p.imageMode(p.CENTER);\n    p.rectMode(p.CENTER);\n    p.textFont(hearthstone_font);\n    p.textSize(font_pixels);\n    p.fill(255);\n    p.noStroke();\n    p.register_all();\n\n    for (let task of task_details) {\n      tasks[task.id] = [];\n\n      for (let card_id = 0; card_id < task.num_cards; card_id++) {\n        tasks[task.id].push(new p.Card(card_id, task.id, task.class));\n      }\n    }\n\n    p.resize_all();\n    setup_done = true;\n  };\n\n  p.draw = () => {\n    p.background(255);\n    p.textAlign(p.LEFT, p.CENTER);\n    p.image(bg, p.width / 2, p.height / 2, p.width, p.height);\n\n    if (current_task_index < task_details.length) {\n      for (let c of tasks[current_task_index]) {\n        c.run();\n      }\n    }\n\n    for (let b of buttons) {\n      b.run();\n    }\n\n    if (the_mouse.busy && current_survey_topic == 0) {\n      p.push();\n      p.translate(p.mouseX - the_mouse.xOffset, p.mouseY - the_mouse.yOffset);\n      p.textSize(28);\n      p.text(the_mouse.effect.label_name, 0, 0);\n      p.pop();\n    }\n\n    p.draw_edit_overlay();\n    p.draw_task_controls();\n\n    if (current_task_index == task_details.length) {\n      p.send_overlay();\n    } else {\n      p.draw_task_overlay();\n    }\n\n    if (survey_topics[current_survey_topic] != \"none\") {\n      p.draw_survey();\n    }\n  };\n\n  p.draw_task_controls = () => {\n    let next_x = p.width - w_padding;\n    let next_y = p.height - h_padding;\n    mouse_over_next = p.dist(p.mouseX, p.mouseY, next_x, next_y) < 75;\n    p.push();\n    p.translate(next_x, next_y);\n    p.fill(255, current_task_index == task_details.length ? 0 : mouse_over_next ? 255 : 100);\n    p.triangle(0, -25, 0, 25, 75, 0);\n    p.pop();\n    let prev_x = p.map(1, 0, 3, w_padding, p.width - w_padding);\n    mouse_over_prev = p.dist(p.mouseX, p.mouseY, prev_x, next_y) < 75;\n    p.push();\n    p.translate(prev_x, next_y);\n    p.fill(255, current_task_index == 0 ? 50 : mouse_over_prev ? 255 : 100);\n    p.triangle(0, -25, 0, 25, -75, 0);\n    p.pop();\n  };\n\n  p.draw_task_overlay = () => {\n    p.textAlign(p.RIGHT, p.CENTER);\n    p.textSize(font_pixels_large);\n    p.text(task_details[current_task_index].title, p.width - w_padding / 2, h_padding);\n    p.textSize(font_pixels);\n    p.text(task_details[current_task_index].instruction, p.width - w_padding / 2, h_padding + font_pixels_large);\n    p.fill(0);\n    p.textAlign(p.CENTER, p.CENTER);\n    p.text(`Task ${current_task_index + 1} \\\\ ${task_details.length}`, p.map(2, 0, 3, w_padding, p.width - w_padding), p.height - h_padding);\n  };\n\n  p.draw_survey = () => {\n    p.push();\n    p.textAlign(p.CENTER, p.CENTER);\n    p.textSize(font_pixels);\n    p.rectMode(p.CENTER);\n    p.background(0, 100);\n    let setting = the_mouse.effect.settings[survey_topics[current_survey_topic]];\n    let options = setting[0];\n\n    if (setting[0][0] == \"x\") {\n      options = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    } else if (setting[0][0] == \"k\") {\n      options = keywords;\n    } else if (setting[0][0] == \"c\") {\n      options = creature_types;\n    }\n\n    if (options[0] == \"x/x\") {\n      for (let attack = 1; attack < 11; attack++) {\n        for (let defense = 1; defense < 11; defense++) {\n          let xPos = p.map(attack, 1, 10, grid_w_padding, p.width - grid_w_padding);\n          let yPos = p.map(defense, 1, 10, grid_h_padding, p.height - grid_h_padding);\n          let box_width = (p.width - grid_w_padding * 2) / 10;\n          let box_height = (p.height - grid_h_padding * 2) / 10;\n\n          if (p.mouseX > xPos - box_width / 2 && p.mouseX < xPos + box_width / 2 && p.mouseY > yPos - box_height / 2 && p.mouseY < yPos + box_height / 2) {\n            p.fill(255, 100);\n          } else {\n            p.fill(255, 0);\n          }\n\n          p.rect(xPos, yPos, box_width, box_height);\n          p.fill(255);\n          p.text(attack + \"/\" + defense, xPos, yPos - 10);\n        }\n      }\n    } else {\n      p.textSize(40);\n      p.fill(255);\n      p.text(the_mouse.effect.label_name + \"...\", p.width / 2, p.height * 0.1);\n      p.textSize(font_pixels);\n      p.rectMode(p.CENTER);\n      let option_button_width = p.width / options.length * 0.5;\n      let option_button_height = p.height * 0.10;\n      let option_buttons_padding = p.width * 0.25;\n\n      for (let [index, option] of options.entries()) {\n        let xPos = p.map(index, 0, options.length - 1, option_buttons_padding, p.width - option_buttons_padding);\n\n        if (p.mouseX > xPos - option_button_width / 2 && p.mouseX < xPos + option_button_width / 2) {\n          p.fill(255, 100);\n          hovered_option = index;\n        } else {\n          p.fill(255, 50);\n        }\n\n        p.rect(xPos, p.height * 0.5, option_button_width, option_button_height, 16);\n        p.fill(255);\n        let option_string = option.toString();\n        option_string = option_string[0].toUpperCase() + option_string.substring(1);\n        option_string = option_string.split(\" \").join(\"\\n\");\n        p.text(option_string, xPos, p.height / 2);\n      }\n    }\n\n    p.pop();\n  };\n\n  p.mouse_pressed_while_surveying = () => {\n    if (p.progress_survey_through_issues()) {\n      return;\n    }\n\n    let setting = the_mouse.effect.settings[survey_topics[current_survey_topic]];\n    let options = setting[0];\n\n    if (options[0] == \"x\") {\n      options = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    } else if (options[0] == \"k\") {\n      options = keywords;\n    } else if (options[0] == \"c\") {\n      options = creature_types;\n    }\n\n    if (options[0] == \"x/x\") {\n      setting[1] = `${p.floor(p.map(p.mouseX, 0, p.width, 1, 11))}/${p.floor(p.map(p.mouseY, 0, p.height, 1, 11))}`;\n    } else {\n      setting[1] = options[hovered_option];\n    }\n\n    current_survey_topic++;\n\n    if (p.progress_survey_through_issues()) {\n      return;\n    }\n  };\n\n  p.mouse_pressed_while_not_surveying = () => {\n    let clicked_card = null;\n\n    if (current_task_index < task_details.length) {\n      for (let c of tasks[current_task_index]) {\n        if (c.mouseInImg()) {\n          clicked_card = c;\n        }\n      }\n    }\n\n    if (clicked_card) {\n      if (the_mouse.busy) {\n        //dropping effect onto a card\n        p.drop_effect_on_card(clicked_card);\n      } else {\n        //clicking on a card generally\n        p.click_to_edit_card(clicked_card);\n      }\n    } else {\n      if (the_mouse.busy) {\n        //clicked away to drop label\n        the_mouse.busy = false;\n        the_mouse.setOffset(0, 0);\n        the_mouse.effect = null;\n      } else {\n        //other clicks\n        if (mouse_over_next && current_task_index < task_details.length) {\n          current_task_index++;\n        } else if (mouse_over_prev && current_task_index > 0) {\n          current_task_index--;\n        }\n\n        if (mouse_over_queuer && current_task_index == task_details.length && !sending) {\n          p.submit();\n        }\n\n        p.mouse_click_while_editing();\n\n        for (let b of buttons) {\n          //clicking on a button with an empty hand\n          if (b.mouseInRegion()) {\n            the_mouse.busy = true;\n            the_mouse.setOffset(b.text_x, b.text_y);\n            the_mouse.effect = JSON.parse(JSON.stringify(effects[b.button_name]));\n            break;\n          }\n        }\n      }\n    }\n  }; //returns true if you need to return out of mouse\n\n\n  p.progress_survey_through_issues = () => {\n    if (current_survey_topic == survey_topics.length) {\n      p.finished_survey();\n      return true;\n    }\n\n    for (let i = 0; i < survey_topics.length; i++) {\n      if (the_mouse.effect.settings[survey_topics[current_survey_topic]][0] == null || !param_format_names.includes(the_mouse.effect.settings[survey_topics[current_survey_topic]][0][0]) && the_mouse.effect.settings[survey_topics[current_survey_topic]][0].length == 1) {\n        current_survey_topic++;\n\n        if (current_survey_topic == survey_topics.length) {\n          p.finished_survey();\n          return true;\n        }\n      }\n    }\n\n    if (current_survey_topic == survey_topics.length) {\n      p.finished_survey();\n      return true;\n    }\n\n    return false;\n  };\n\n  p.drop_effect_on_card = c => {\n    current_survey_topic = 1;\n    survey_drop_target = c;\n\n    if (p.progress_survey_through_issues()) {\n      return;\n    }\n  };\n\n  p.click_to_edit_card = c => {\n    if (c.mouse_over_mana) {\n      editing = \"mana\";\n      editing_card = c;\n    } else if (c.mouse_over_power) {\n      editing = \"power\";\n      editing_card = c;\n    } else if (c.mouse_over_toughness && !(editing == \"effect\" && p.dist(p.mouseX, p.mouseY, editX, editY) < 10)) {\n      editing = \"toughness\";\n      editing_card = c;\n    } else if (c.mouse_over_card_effect && !(editing == \"effect\" && p.dist(p.mouseX, p.mouseY, editX, editY) < 10)) {\n      editing = \"effect\";\n      editX = c.hovered_effect.x + blank_spell_img.width / 2;\n      editY = c.hovered_effect.y + c.hovered_effect.effect_string_height / 2;\n      editing_card = c;\n      effect_to_remove = c.hovered_effect;\n    } else if (editing == \"effect\" && p.dist(p.mouseX, p.mouseY, editX, editY) < 10) {\n      editing_card.effects.splice(editing_card.effects.indexOf(effect_to_remove), 1);\n      editing = \"none\";\n    } else {\n      editing = \"none\";\n    }\n  };\n\n  p.mouse_click_while_editing = () => {\n    if (editing == \"mana\") {\n      if (p.dist(p.mouseX, p.mouseY, editX - 60, editY - 50) < 40) {\n        editing_card.mana--;\n      } else if (p.dist(p.mouseX, p.mouseY, editX + 60, editY - 50) < 40) {\n        editing_card.mana++;\n      } else {\n        editing = \"none\";\n      }\n\n      editing_card.mana = p.constrain(editing_card.mana, 0, 10);\n    } else if (editing == \"power\") {\n      if (p.dist(p.mouseX, p.mouseY, editX - 60, editY + 50) < 40) {\n        editing_card.power--;\n      } else if (p.dist(p.mouseX, p.mouseY, editX + 60, editY + 50) < 40) {\n        editing_card.power++;\n      } else {\n        editing = \"none\";\n      }\n\n      editing_card.power = p.constrain(editing_card.power, 0, 10);\n    } else if (editing == \"toughness\") {\n      if (p.dist(p.mouseX, p.mouseY, editX - 60, editY + 50) < 40) {\n        editing_card.toughness--;\n      } else if (p.dist(p.mouseX, p.mouseY, editX + 60, editY + 50) < 40) {\n        editing_card.toughness++;\n      } else {\n        editing = \"none\";\n      }\n\n      editing_card.toughness = p.constrain(editing_card.toughness, 1, 10);\n    } else if (editing == \"effect\") {\n      editing = \"none\";\n    }\n  };\n\n  p.draw_edit_overlay = () => {\n    p.push();\n\n    if (editing != \"none\") {\n      p.translate(editX, editY);\n      p.noStroke();\n\n      if (editing == \"effect\") {\n        p.rotate(p.QUARTER_PI);\n        p.fill(0);\n        p.rect(0, 0, 22, 6);\n        p.rect(0, 0, 6, 22);\n        p.fill(255);\n        p.rect(0, 0, 20, 4);\n        p.rect(0, 0, 4, 20);\n      } else {\n        p.fill(0);\n        p.rect(-60, editing == \"mana\" ? -50 : 75, 32, 8);\n        p.rect(60, editing == \"mana\" ? -50 : 75, 32, 8);\n        p.rect(60, editing == \"mana\" ? -50 : 75, 8, 32);\n        p.fill(255);\n        p.rect(-60, editing == \"mana\" ? -50 : 75, 30, 6);\n        p.rect(60, editing == \"mana\" ? -50 : 75, 30, 6);\n        p.rect(60, editing == \"mana\" ? -50 : 75, 6, 30);\n      }\n    }\n\n    p.pop();\n  };\n\n  p.mousePressed = () => {\n    if (setup_done) {\n      if (survey_topics[current_survey_topic] != \"none\") {\n        p.mouse_pressed_while_surveying();\n      } else {\n        p.mouse_pressed_while_not_surveying();\n      }\n    }\n  };\n\n  p.finished_survey = () => {\n    survey_drop_target.effects.push(JSON.parse(JSON.stringify(the_mouse.effect)));\n    current_survey_topic = 0;\n    the_mouse.effect = null;\n    the_mouse.busy = false;\n  };\n\n  p.keyPressed = () => {};\n\n  p.windowResized = () => {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n    p.resize_all();\n  };\n\n  p.ease_out_cubic = x => {\n    return 1 - p.pow(1 - x, 3);\n  };\n\n  p.send_overlay = () => {\n    p.push();\n    let queur_x = p.width - w_padding;\n    let queur_y = p.height - h_padding;\n    mouse_over_queuer = p.mouseX > queur_x - 100 && p.mouseX < queur_x + 100 && p.mouseY > queur_y - 30 && p.mouseY < queur_y + 30;\n    p.translate(queur_x, queur_y);\n\n    if (sending) {\n      let q = p.map(p.millis(), send_start_time, send_start_time + estimated_send_duration, 0, 1, true);\n      q = p.ease_out_cubic(q);\n      p.fill(255, p.map(q, 0, 1, 50, 100));\n      p.rect(p.map(q, 0, 1, -100, 0), 0, p.map(q, 0, 1, 0, 200), 60, 4);\n      p.rect(0, 0, 200, 60, 4);\n    } else {\n      p.fill(255, mouse_over_queuer ? 255 : 100);\n      p.rect(0, 0, 200, 60, 4);\n    }\n\n    p.fill(0, 255);\n    p.textAlign(p.CENTER, p.CENTER);\n    p.text(sending ? sent ? \"Sending again...\" : \"Sending...\" : sent ? mouse_over_queuer ? \"Send again\" : \"Done.\" : \"Send to sheets\", 0, -4);\n    p.pop();\n  };\n\n  p.submit = () => {\n    if (!sending) {\n      sending = true;\n      send_start_time = p.millis();\n      const submissions = p.generate_submissions();\n      props.send_to_google_sheets(submissions).then(result => {\n        console.log(result);\n        sending = false;\n        sent = true;\n      });\n    }\n  };\n\n  p.load_save = () => {\n    tasks = JSON.parse(asString);\n\n    for (let t of tasks) {\n      for (let c of t) {\n        c.__proto__ = p.Card.prototype;\n      }\n    }\n  };\n\n  p.make_save = () => {\n    let asString = JSON.stringify(tasks);\n    props.save_to_google_sheets(asString).then(result => {\n      console.log(result);\n      sending = false;\n      sent = true;\n    });\n  };\n\n  p.generate_submissions = () => {\n    const submissions = [];\n\n    for (let t of tasks) {\n      for (let c of t) {\n        var _user;\n\n        let card_submission = {\n          id: c.card_id,\n          task: c.card_task_index,\n          user: (_user = user) !== null && _user !== void 0 ? _user : \"noUser\",\n          p: c.power,\n          t: c.toughness,\n          m: c.mana\n        };\n        let repeat_checker = {};\n\n        for (let e of c.effects) {\n          if (repeat_checker[e.effect_short] == undefined) {\n            repeat_checker[e.effect_short] = 0;\n          } else {\n            repeat_checker[e.effect_short]++;\n          }\n\n          if (e.settings.methods[0] != null) card_submission[e.effect_short + \"-method-\" + repeat_checker[e.effect_short]] = e.settings.methods[1];\n          if (e.settings.params[0] != null) card_submission[e.effect_short + \"-param-\" + repeat_checker[e.effect_short]] = e.settings.params[1];\n          if (e.settings.targets[0] != null) card_submission[e.effect_short + \"-target-\" + repeat_checker[e.effect_short]] = e.settings.targets[1];\n          if (e.settings.filters[0] != null) card_submission[e.effect_short + \"-filter-\" + repeat_checker[e.effect_short]] = e.settings.filters[1];\n          if (e.settings.duration[0] != null) card_submission[e.effect_short + \"-duration-\" + repeat_checker[e.effect_short]] = e.settings.duration[1];\n        }\n\n        submissions[c.card_task_index + \"-\" + c.card_id] = card_submission;\n      }\n    }\n\n    return submissions;\n  };\n\n  p.resize_all = () => {\n    for (let b of buttons) {\n      b.resized();\n    }\n\n    for (let t of tasks) {\n      for (let c of t) {\n        c.resized();\n      }\n    }\n\n    p.generate_masks();\n  };\n\n  p.generate_masks = () => {\n    ellipse_mask = p.createGraphics(250, 250);\n    ellipse_mask.ellipse(ellipse_mask.width / 2, ellipse_mask.height / 2, 200, 200);\n    rect_mask = p.createGraphics(250, 250);\n    rect_mask.rectMode(p.CENTER);\n    rect_mask.rect(rect_mask.width / 2, rect_mask.height / 2, 200, 160);\n  };\n\n  p.register_effect = (effect_text, effect_short, method, param, targets, filters, duration) => {\n    effects[effect_text] = new p.Effect(effect_text, effect_short, method, param, targets, filters, duration);\n    buttons.push(new p.Button(effect_text, button_id++));\n  };\n\n  p.register_all = () => {\n    p.register_effect(\"Deal damage\", \"dam\", [\"randomly\", \"targeted\", \"all\"], [\"x\"], [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\"], [\"enemy\", \"friendly\", \"all\"], null);\n    p.register_effect(\"Destroy\", \"des\", [\"randomly\", \"targeted\", \"all\"], null, [\"minions\", \"murlocs\", \"beasts\", \"demons\", \"totems\", \"weapons\"], [\"enemy\", \"friendly\", \"all\"], null);\n    p.register_effect(\"Heal\", \"hea\", [\"randomly\", \"targeted\", \"all\"], [\"x\"], [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\"], [\"enemy\", \"friendly\", \"all\"], null);\n    p.register_effect(\"Gain armour\", \"arm\", null, [\"x\"], null, null, null);\n    p.register_effect(\"Change stats\", \"cha\", [\"randomly\", \"targeted\", \"all\", \"aura\"], [\"x/x\"], [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\", \"weapons\"], [\"enemy\", \"friendly\", \"all\"], [\"turn\", \"permanently\"]);\n    p.register_effect(\"Set stats\", \"set\", [\"randomly\", \"targeted\", \"all\", \"aura\"], [\"x/x\"], [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\", \"weapons\"], [\"enemy\", \"friendly\", \"all\"], [\"turn\", \"permanently\"]);\n    p.register_effect(\"Give keyword\", \"giv\", [\"randomly\", \"targeted\", \"all\", \"aura\"], [\"k\"], [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\", \"weapons\"], [\"enemy\", \"friendly\", \"all\"], [\"turn\", \"permanently\"]);\n    p.register_effect(\"Return to hand\", \"ret\", [\"randomly\", \"targeted\", \"all\"], null, [\"minions\", \"murlocs\", \"beasts\", \"demons\", \"totems\"], [\"enemy\", \"friendly\", \"all\"], null);\n    p.register_effect(\"Draw\", \"dra\", null, [\"x\"], null, [\"enemy\", \"friendly\", \"all\"], null);\n    p.register_effect(\"Gain mana\", \"gai\", null, [\"x\"], null, [\"enemy\", \"friendly\", \"all\"], null);\n    p.register_effect(\"Summon\", \"sum\", null, [\"x/x\"], null, null, null);\n    p.register_effect(\"Keyword\", \"key\", null, [\"k\"], null, null, null);\n    p.register_effect(\"Creature type\", \"cre\", null, [\"c\"], null, null, null);\n  };\n\n  p.FancyMouse = class {\n    constuctor() {\n      this.busy = false;\n      this.xOffset = 0;\n      this.yOffset = 0;\n      this.effect = null;\n    }\n\n    setOffset(buttonX, buttonY) {\n      this.xOffset = p.mouseX - buttonX;\n      this.yOffset = p.mouseY - buttonY;\n    }\n\n  };\n  p.Effect = class {\n    constructor(label_name, effect_short, methods, param_format, targets, filters, duration) {\n      this.x = 0;\n      this.y = 0;\n      this.effect_string = \"\";\n      this.effect_string_height = 0;\n      this.effect_string_width = blank_spell_img.width * 0.5;\n      this.label_name = label_name;\n      this.effect_short = effect_short;\n      this.settings = {\n        methods: [methods, \"\"],\n        params: [param_format, \"\"],\n        targets: [targets, \"\"],\n        filters: [filters, \"\"],\n        duration: [duration, \"\"]\n      };\n    }\n\n  };\n  p.Card = class {\n    constructor(card_id, card_task_index, card_class) {\n      this.y = 0;\n      this.x = 0;\n      this.w = blank_spell_img.width * 0.75;\n      this.h = blank_spell_img.height * 0.75;\n      this.oversized = false;\n      this.class = card_class;\n      this.type_id = 1; //creature\n\n      this.card_id = card_id;\n      this.card_task_index = card_task_index;\n      this.flav_img_index = p.floor(p.random(gan_imgs.length));\n      this.mana = 5;\n      this.power = 5;\n      this.toughness = 5;\n      this.effects = [];\n      this.hovered_effect = null;\n      this.mouse_over_card_effect = false;\n      this.mouse_over_mana = false;\n      this.mouse_over_power = false;\n      this.mouse_over_toughness = false;\n    }\n\n    resized() {\n      if (tasks[this.card_task_index].length == 1) {\n        this.x = p.map(2, 0, 3, w_padding, p.width - w_padding);\n      } else if (tasks[this.card_task_index].length == 2) {\n        this.x = p.map(this.card_id == 0 ? 1.5 : 2.5, 0, 3, w_padding, p.width - w_padding);\n      } else {\n        this.x = p.map(this.card_id + 1, 0, 3, w_padding, p.width - w_padding);\n      }\n\n      this.y = p.height / 2;\n    }\n\n    run() {\n      this.generate_effect_text();\n      this.check_mouse_hovers();\n      this.display();\n    }\n\n    generate_effect_text() {\n      for (let e of this.effects) {\n        e.effect_string = \"\";\n\n        if (e.label_name == \"Keyword\" || e.label_name == \"Creature type\") {\n          e.effect_string = e.settings.params[1];\n        } else if (e.label_name == \"Deal damage\") {\n          if (e.settings.methods[1] == \"randomly\") {\n            e.effect_string = \"Randomly deal \" + e.settings.params[1] + \" damage to a \";\n          } else if (e.settings.methods[1] == \"targeted\") {\n            e.effect_string = \"Deal \" + e.settings.params[1] + \" damage to target \";\n          } else {\n            e.effect_string = \"Deal \" + e.settings.params[1] + \" damage to all \";\n          }\n\n          e.effect_string += e.settings.filters[1] == \"all\" ? \"\" : e.settings.filters[1] + \" \"; //remove \"all all\"\n\n          if (e.settings.methods[1] == \"all\") {\n            e.effect_string += e.settings.targets[1];\n          } else {\n            e.effect_string += target_names_singular[target_names.indexOf(e.settings.targets[1])];\n          }\n        } else if (e.label_name == \"Destroy\") {\n          if (e.settings.methods[1] == \"randomly\") {\n            e.effect_string = \"Randomly destroy a \";\n          } else if (e.settings.methods[1] == \"targeted\") {\n            e.effect_string = \"Destroy a target \";\n          } else {\n            e.effect_string = \"Destroy all \";\n          }\n\n          e.effect_string += e.settings.filters[1] == \"all\" ? \"\" : e.settings.filters[1] + \" \"; //remove \"all all\"\n\n          if (e.settings.methods[1] == \"all\") {\n            e.effect_string += e.settings.targets[1];\n          } else {\n            e.effect_string += target_names_singular[target_names.indexOf(e.settings.targets[1])];\n          }\n        } else if (e.label_name == \"Heal\") {\n          if (e.settings.methods[1] == \"randomly\") {\n            e.effect_string = \"Restore \" + e.settings.params[1] + \" health to a random \";\n          } else if (e.settings.methods[1] == \"targeted\") {\n            e.effect_string = \"Restore \" + e.settings.params[1] + \" health to a target \";\n          } else {\n            e.effect_string = \"Restore \" + e.settings.params[1] + \" health to all \";\n          }\n\n          e.effect_string += e.settings.filters[1] == \"all\" ? \"\" : e.settings.filters[1] + \" \"; //remove \"all all\"\n\n          if (e.settings.methods[1] == \"all\") {\n            e.effect_string += e.settings.targets[1];\n          } else {\n            e.effect_string += target_names_singular[target_names.indexOf(e.settings.targets[1])];\n          }\n        } else {\n          e.effect_string = e.label_name;\n        }\n\n        let estimated_characters_per_line = 20;\n        let estimated_lines = e.effect_string.length / estimated_characters_per_line;\n        e.effect_string_height = font_pixels_small * estimated_lines + 30;\n      }\n    }\n\n    display() {\n      p.push();\n      p.fill(0);\n      p.textAlign(p.CENTER, p.CENTER);\n\n      if (this.effects.length > 2) {\n        this.oversized = true;\n      } else {\n        this.oversized = false;\n      }\n\n      let flav = gan_imgs[this.flav_img_index].get();\n      let forg;\n\n      if (card_types[this.type_id] == \"spell\") {\n        flav.mask(rect_mask);\n        forg = blank_spell_img;\n      } else if (card_types[this.type_id] == \"minion\") {\n        flav.mask(ellipse_mask);\n        forg = this.oversized ? full_blank_creature_img : blank_creature_img;\n      } else {\n        flav.mask(rect_mask);\n        forg = blank_weapon_img;\n      }\n\n      if (!this.oversized) {\n        p.image(flav, this.x, this.y - 90, 250, 250);\n      }\n\n      p.image(forg, this.x, this.y, this.w, this.h);\n      p.push();\n      p.textSize(60);\n      p.fill(255);\n      p.strokeWeight(3);\n      p.stroke(0);\n\n      if (card_types[this.type_id] == \"minion\") {\n        p.text(this.power, this.x - this.w / 2.99, this.y + this.h / 2.8);\n        p.text(this.toughness, this.x + this.w / 2.6, this.y + this.h / 2.8);\n      }\n\n      p.text(this.mana, this.x - this.w / 2.99, this.y - this.h / 2.3);\n      p.pop();\n      p.push();\n      p.fill(0);\n      p.textSize(font_pixels_small);\n      let translation_offset_y;\n\n      if (this.oversized) {\n        translation_offset_y = this.y - this.h / 2 + 80;\n        p.translate(this.x, this.y - this.h / 2 + 80);\n      } else {\n        translation_offset_y = this.y + 50;\n        p.translate(this.x, this.y + 50);\n      }\n\n      this.mouse_over_card_effect = false;\n      this.hovered_effect = null;\n\n      for (let e of this.effects) {\n        translation_offset_y += e.effect_string_height / 2;\n        p.translate(0, e.effect_string_height / 2);\n\n        if (p.mouseY > translation_offset_y - e.effect_string_height / 2 && p.mouseY < translation_offset_y + e.effect_string_height / 2 && p.mouseX > this.x - e.effect_string_width / 2 && p.mouseX < this.x + e.effect_string_width / 2) {\n          this.mouse_over_card_effect = true;\n          this.hovered_effect = e;\n          this.hovered_effect.x = this.x - e.effect_string_width / 2;\n          this.hovered_effect.y = translation_offset_y - e.effect_string_height;\n          p.fill(0, 100);\n        } else {\n          p.fill(0, 50);\n        }\n\n        p.rect(0, 0, e.effect_string_width, e.effect_string_height, 4, 4);\n        p.fill(255, 255);\n        p.text(e.effect_string, 0, 0, blank_spell_img.width / 2, blank_spell_img.height / 2);\n        translation_offset_y += e.effect_string_height / 2 + 5;\n        p.translate(0, e.effect_string_height / 2 + 5);\n      }\n\n      p.pop();\n      p.push();\n\n      if (editing_card == this) {\n        if (editing == \"mana\") {\n          editX = this.x - this.w / 2.99;\n          editY = this.y - this.h / 2.3;\n        } else if (editing == \"power\") {\n          editX = this.x - this.w / 2.99;\n          editY = this.y + this.h / 2.8;\n        } else if (editing == \"toughness\") {\n          editX = this.x + this.w / 2.6;\n          editY = this.y + this.h / 2.8;\n        }\n      }\n\n      p.pop();\n      p.pop();\n    }\n\n    mouseInImg() {\n      return p.mouseX > this.x - this.w / 2 - mouse_padding && p.mouseX < this.x + this.w / 2 + mouse_padding && p.mouseY > this.y - this.h / 2 - mouse_padding && p.mouseY < this.y + this.h / 2 + mouse_padding;\n    }\n\n    check_mouse_hovers() {\n      if (card_types[this.type_id] == \"minion\") {\n        this.mouse_over_power = p.dist(p.mouseX, p.mouseY, this.x - this.w / 2.99, this.y + this.h / 2.8) < 50;\n        this.mouse_over_toughness = p.dist(p.mouseX, p.mouseY, this.x + this.w / 2.6, this.y + this.h / 2.8) < 50;\n      }\n\n      this.mouse_over_mana = p.dist(p.mouseX, p.mouseY, this.x - this.w / 2.99, this.y - this.h / 2.3) < 50;\n    }\n\n  };\n  p.Button = class {\n    constructor(button_name, button_id) {\n      this.button_name = button_name;\n      this.button_id = button_id;\n      this.x = 0;\n      this.y = 0;\n      this.w = p.textWidth(button_name) + 14;\n      this.h = font_pixels + 10;\n      this.fillAlpha = 100;\n      this.text_x = 0;\n      this.text_y = 0;\n    }\n\n    mouseInRegion() {\n      return p.mouseX > this.x - this.w / 2 - mouse_padding && p.mouseX < this.x + this.w / 2 + mouse_padding && p.mouseY > this.y - this.h / 2 - mouse_padding && p.mouseY < this.y + this.h / 2 + mouse_padding;\n    }\n\n    resized() {\n      this.x = w_padding - 150 + this.w / 2 - 7;\n      this.y = p.map(this.button_id, 0, buttons.length, h_padding, p.height - h_padding);\n      this.text_x = this.x - this.w / 2 + 7;\n      this.text_y = this.y - 6;\n    }\n\n    run() {\n      this.update();\n      this.display();\n    }\n\n    update() {\n      if (this.mouseInRegion() && current_survey_topic == 0) {\n        this.fillAlpha = 255;\n      } else {\n        this.fillAlpha = 100;\n      }\n    }\n\n    display() {\n      p.textSize(font_pixels);\n      p.textAlign(p.LEFT, p.CENTER);\n      p.fill(255, this.fillAlpha);\n      p.rect(this.x, this.y, this.w, this.h, 4, 4);\n      p.fill(0, 255);\n      p.text(this.button_name, this.text_x, this.text_y);\n    }\n\n  };\n\n  document.oncontextmenu = function () {\n    return false;\n  };\n}","map":{"version":3,"sources":["/Users/aep/phd/hearth-mici/src/code/sketch.js"],"names":["sketch","p","buttons","button_id","effects","current_task_index","task_details","id","title","instruction","num_cards","class","user","tasks","card_types","method_names","target_names","target_names_singular","filter_names","duration_names","param_format_names","effect_names","keywords","all_creature_types","creature_types","survey_topics","current_survey_topic","survey_drop_target","font_pixels_large","font_pixels","font_pixels_small","hearthstone_font","mouse_padding","w_padding","h_padding","grid_w_padding","grid_h_padding","rect_mask","ellipse_mask","blank_spell_img","blank_creature_img","blank_weapon_img","full_blank_creature_img","bg","gan_imgs","the_mouse","setup_done","hovered_option","editing","editing_card","effect_to_remove","editX","editY","sending","send_start_time","estimated_send_duration","sent","mouse_over_queuer","mouse_over_next","mouse_over_prev","props","myCustomRedrawAccordingToNewPropsHandler","_props","preload","loadImage","bg_img","spell_img","weapon_img","creature_img","loadFont","hs_font","im","push","setup","createCanvas","windowWidth","windowHeight","getURLParams","FancyMouse","height","width","imageMode","CENTER","rectMode","textFont","textSize","fill","noStroke","register_all","task","card_id","Card","resize_all","draw","background","textAlign","LEFT","image","length","c","run","b","busy","translate","mouseX","xOffset","mouseY","yOffset","text","effect","label_name","pop","draw_edit_overlay","draw_task_controls","send_overlay","draw_task_overlay","draw_survey","next_x","next_y","dist","triangle","prev_x","map","RIGHT","setting","settings","options","attack","defense","xPos","yPos","box_width","box_height","rect","option_button_width","option_button_height","option_buttons_padding","index","option","entries","option_string","toString","toUpperCase","substring","split","join","mouse_pressed_while_surveying","progress_survey_through_issues","floor","mouse_pressed_while_not_surveying","clicked_card","mouseInImg","drop_effect_on_card","click_to_edit_card","setOffset","submit","mouse_click_while_editing","mouseInRegion","text_x","text_y","JSON","parse","stringify","button_name","finished_survey","i","includes","mouse_over_mana","mouse_over_power","mouse_over_toughness","mouse_over_card_effect","hovered_effect","x","y","effect_string_height","splice","indexOf","mana","constrain","power","toughness","rotate","QUARTER_PI","mousePressed","keyPressed","windowResized","resizeCanvas","ease_out_cubic","pow","queur_x","queur_y","q","millis","submissions","generate_submissions","send_to_google_sheets","then","result","console","log","load_save","asString","t","__proto__","prototype","make_save","save_to_google_sheets","card_submission","card_task_index","m","repeat_checker","e","effect_short","undefined","methods","params","targets","filters","duration","resized","generate_masks","createGraphics","ellipse","register_effect","effect_text","method","param","Effect","Button","constuctor","buttonX","buttonY","constructor","param_format","effect_string","effect_string_width","card_class","w","h","oversized","type_id","flav_img_index","random","generate_effect_text","check_mouse_hovers","display","estimated_characters_per_line","estimated_lines","flav","get","forg","mask","strokeWeight","stroke","translation_offset_y","textWidth","fillAlpha","update","document","oncontextmenu"],"mappings":"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","sourcesContent":["/* eslint eqeqeq: \"off\", no-unused-vars: \"off\" */\n\n\n//to fix totalHeight bug, change p5 by changing o-totalHeight to just o\n//todo: fix this on a generic p5 import somehow\n\n\n//todo: language stuff\n//todo: buttons\n//todo: creature types\n//todo: card types\n//todo: effect limit\n//ABC test reports, articulate logic for report design\n\n//make rampiness, variety, controllynes and see when they would be useful\n\nexport default function sketch(p) {\n\n\n  const buttons = [];\n  let button_id = 0;\n\n  const effects = [];\n\n\n  let current_task_index = 0;\n  const task_details = [{\n    id: 0,\n    title: \"Mage vs Warrior\",\n    instruction: \"Create 2 mage cards that helps against warriors.\",\n    num_cards: 2,\n    class: \"mage\"\n  },\n  {\n    id: 1,\n    title: \"Murlocs\",\n    instruction: \"Create 3 murlocs\",\n    num_cards: 3,\n    class: \"shaman\"\n  },\n  {\n    id: 2,\n    title: \"The ultimate defense\",\n    instruction: \"Create the ultimate defensive card.\",\n    num_cards: 1,\n    class: \"warrior\"\n  }\n  ]\n\n\n\n  let user = \"\"\n\n  let tasks = [];\n  const card_types = [\"spell\", \"minion\", \"weapon\"]\n\n  const method_names = [\"randomly\", \"targeted\", \"all\", \"aura\"];\n  const target_names = [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\", \"weapons\"];\n  const target_names_singular = [\"minion\", \"hero\", \"minion or hero\", \"murloc\", \"beast\", \"demon\", \"totem\", \"weapon\"]\n  const filter_names = [\"enemy\", \"friendly\", \"all\"];\n  const duration_names = [\"turn\", \"permanently\"];\n  const param_format_names = [\"x\", \"x/x\", \"k\", \"c\"];\n  const effect_names = [\"Deal damage\", \"Destroy\", \"Heal\", \"Gain armour\", \"Change stats\", \"Set stats\", \"Give keyword\", \"Return to hand\", \"Draw\", \"Gain mana\", \"Summon: \", \"Battlecry: \", \"Deathrattle: \"]\n  const keywords = [\"Taunt\", \"Charge\", \"Lifesteal\", \"Spell damage +1\", \"Divine shield\", \"Poisonous\", \"Windfury\", \"Frozen\"]\n  const all_creature_types = [\"murloc\", \"beast\", \"demon\", \"totem\", \"dragon\", \"pirate\", \"mech\", \"elemental\"]\n  const creature_types = [\"Murloc\", \"Beast\", \"Demon\", \"Totem\"]\n\n  const survey_topics = [\"none\", \"methods\", \"filters\", \"targets\", \"duration\", \"params\"];\n  let current_survey_topic = 0;\n\n  let survey_drop_target = null;\n\n  const font_pixels_large = 32;\n  const font_pixels = 24;\n  const font_pixels_small = 20;\n\n  let hearthstone_font;\n  const mouse_padding = 1;\n  let w_padding, h_padding;\n  let grid_w_padding, grid_h_padding;\n\n  let rect_mask, ellipse_mask;\n  let blank_spell_img, blank_creature_img, blank_weapon_img, full_blank_creature_img;\n  let bg;\n  let gan_imgs = [];\n\n\n  let the_mouse;\n  let setup_done = false;\n  let hovered_option = -1;\n\n  let editing = \"none\";\n  let editing_card = null;\n  let effect_to_remove = null;\n  let editX = 0;\n  let editY = 0;\n\n  let sending = false;\n  let send_start_time = -10000;\n  const estimated_send_duration = 3000; //over-estimate\n  let sent = false;\n\n  let mouse_over_queuer;\n  let mouse_over_next;\n  let mouse_over_prev;\n\n\n  let props;\n\n\n  p.myCustomRedrawAccordingToNewPropsHandler = (_props) => {\n    props = _props;\n  }\n\n  p.preload = () => {\n    bg = p.loadImage(props.bg_img)\n    blank_spell_img = p.loadImage(props.spell_img);\n    blank_weapon_img = p.loadImage(props.weapon_img)\n    blank_creature_img = p.loadImage(props.creature_img)\n    full_blank_creature_img = p.loadImage(props.full_blank_creature_img);\n    hearthstone_font = p.loadFont(props.hs_font);\n    for (let im of props.gan_imgs) {\n      gan_imgs.push(p.loadImage(im))\n    }\n  }\n\n\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n    user = p.getURLParams().user;\n\n    the_mouse = new p.FancyMouse();\n\n\n    h_padding = p.height * 0.1;\n    w_padding = p.width * 0.2;\n    grid_h_padding = p.height * 0.2;\n    grid_w_padding = p.width * 0.1;\n    p.imageMode(p.CENTER)\n    p.rectMode(p.CENTER);\n    p.textFont(hearthstone_font);\n    p.textSize(font_pixels);\n    p.fill(255);\n    p.noStroke();\n\n    p.register_all();\n\n\n    for (let task of task_details) {\n      tasks[task.id] = [];\n      for (let card_id = 0; card_id < task.num_cards; card_id++) {\n        tasks[task.id].push(new p.Card(card_id, task.id, task.class));\n      }\n    }\n\n    p.resize_all();\n\n\n\n\n    setup_done = true;\n\n  }\n\n\n  p.draw = () => {\n    p.background(255)\n    p.textAlign(p.LEFT, p.CENTER);\n    p.image(bg, p.width / 2, p.height / 2, p.width, p.height);\n\n\n    if (current_task_index < task_details.length) {\n      for (let c of tasks[current_task_index]) {\n        c.run();\n      }\n    }\n\n    for (let b of buttons) {\n      b.run();\n    }\n\n    if (the_mouse.busy && current_survey_topic == 0) {\n      p.push();\n      p.translate(p.mouseX - the_mouse.xOffset, p.mouseY - the_mouse.yOffset)\n      p.textSize(28)\n      p.text(the_mouse.effect.label_name, 0, 0)\n      p.pop();\n    }\n\n    p.draw_edit_overlay();\n    p.draw_task_controls();\n\n\n    if (current_task_index == task_details.length) {\n      p.send_overlay();\n    } else {\n      p.draw_task_overlay();\n\n    }\n\n\n    if (survey_topics[current_survey_topic] != \"none\") {\n      p.draw_survey();\n    }\n\n  }\n\n  p.draw_task_controls = () => {\n\n\n    let next_x = p.width - w_padding;\n    let next_y = p.height - h_padding;\n    mouse_over_next = p.dist(p.mouseX, p.mouseY, next_x, next_y) < 75;\n\n    p.push();\n    p.translate(next_x, next_y)\n    p.fill(255, current_task_index == task_details.length ? 0 : mouse_over_next ? 255 : 100)\n    p.triangle(0, -25, 0, 25, 75, 0);\n    p.pop();\n\n    let prev_x = p.map(1, 0, 3, w_padding, p.width - w_padding)\n    mouse_over_prev = p.dist(p.mouseX, p.mouseY, prev_x, next_y) < 75;\n\n    p.push();\n    p.translate(prev_x, next_y)\n    p.fill(255, current_task_index == 0 ? 50 : mouse_over_prev ? 255 : 100)\n    p.triangle(0, -25, 0, 25, -75, 0);\n    p.pop();\n\n  }\n\n  p.draw_task_overlay = () => {\n    p.textAlign(p.RIGHT, p.CENTER)\n    p.textSize(font_pixels_large);\n    p.text(task_details[current_task_index].title, p.width - w_padding / 2, h_padding)\n\n    p.textSize(font_pixels);\n    p.text(task_details[current_task_index].instruction, p.width - w_padding / 2, h_padding + font_pixels_large)\n\n\n    p.fill(0);\n    p.textAlign(p.CENTER, p.CENTER);\n    p.text(`Task ${current_task_index + 1} \\\\ ${task_details.length}`, p.map(2, 0, 3, w_padding, p.width - w_padding), p.height - h_padding)\n  }\n\n\n\n  p.draw_survey = () => {\n    p.push();\n    p.textAlign(p.CENTER, p.CENTER)\n    p.textSize(font_pixels)\n\n    p.rectMode(p.CENTER)\n    p.background(0, 100)\n\n    let setting = the_mouse.effect.settings[survey_topics[current_survey_topic]]\n    let options = setting[0]\n\n\n    if (setting[0][0] == \"x\") {\n      options = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    } else if (setting[0][0] == \"k\") {\n      options = keywords\n    } else if (setting[0][0] == \"c\") {\n      options = creature_types;\n    }\n\n\n    if (options[0] == \"x/x\") {\n      for (let attack = 1; attack < 11; attack++) {\n        for (let defense = 1; defense < 11; defense++) {\n          let xPos = p.map(attack, 1, 10, grid_w_padding, p.width - grid_w_padding);\n          let yPos = p.map(defense, 1, 10, grid_h_padding, p.height - grid_h_padding);\n          let box_width = (p.width - grid_w_padding * 2) / 10;\n          let box_height = (p.height - grid_h_padding * 2) / 10;\n\n          if (p.mouseX > xPos - box_width / 2 && p.mouseX < xPos + box_width / 2 &&\n            p.mouseY > yPos - box_height / 2 && p.mouseY < yPos + box_height / 2) {\n            p.fill(255, 100);\n          } else {\n            p.fill(255, 0);\n          }\n          p.rect(xPos, yPos, box_width, box_height);\n          p.fill(255);\n          p.text(attack + \"/\" + defense, xPos, yPos - 10)\n        }\n      }\n    } else {\n\n\n      p.textSize(40);\n      p.fill(255)\n      p.text(the_mouse.effect.label_name + \"...\", p.width / 2, p.height * 0.1);\n\n      p.textSize(font_pixels)\n      p.rectMode(p.CENTER)\n\n      let option_button_width = (p.width / options.length) * 0.5;\n      let option_button_height = p.height * 0.10;\n      let option_buttons_padding = p.width * 0.25;\n\n      for (let [index, option] of options.entries()) {\n        let xPos = p.map(index, 0, options.length - 1, option_buttons_padding, p.width - option_buttons_padding);\n        if (p.mouseX > xPos - option_button_width / 2 && p.mouseX < xPos + option_button_width / 2) {\n          p.fill(255, 100)\n          hovered_option = index;\n        } else {\n          p.fill(255, 50)\n        }\n        p.rect(xPos, p.height * 0.5, option_button_width, option_button_height, 16);\n        p.fill(255);\n\n        let option_string = option.toString();\n        option_string = option_string[0].toUpperCase() + option_string.substring(1)\n        option_string = option_string.split(\" \").join(\"\\n\");\n\n        p.text(option_string, xPos, p.height / 2)\n      }\n    }\n\n    p.pop();\n  }\n\n\n  p.mouse_pressed_while_surveying = () => {\n    if (p.progress_survey_through_issues()) {\n      return\n    }\n\n\n    let setting = the_mouse.effect.settings[survey_topics[current_survey_topic]];\n    let options = setting[0]\n    if (options[0] == \"x\") {\n      options = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    } else if (options[0] == \"k\") {\n      options = keywords;\n    } else if (options[0] == \"c\") {\n      options = creature_types;\n    }\n\n    if (options[0] == \"x/x\") {\n      setting[1] = `${p.floor(p.map(p.mouseX, 0, p.width, 1, 11))}/${p.floor(p.map(p.mouseY, 0, p.height, 1, 11))}`\n    } else {\n      setting[1] = options[hovered_option]\n    }\n\n\n\n    current_survey_topic++;\n\n    if (p.progress_survey_through_issues()) {\n      return\n    }\n\n  }\n\n\n  p.mouse_pressed_while_not_surveying = () => {\n    let clicked_card = null;\n\n    if (current_task_index < task_details.length) {\n      for (let c of tasks[current_task_index]) {\n        if (c.mouseInImg()) {\n          clicked_card = c;\n        }\n      }\n    }\n\n\n    if (clicked_card) {\n      if (the_mouse.busy) { //dropping effect onto a card\n        p.drop_effect_on_card(clicked_card)\n      } else { //clicking on a card generally\n        p.click_to_edit_card(clicked_card)\n      }\n    } else {\n      if (the_mouse.busy) { //clicked away to drop label\n        the_mouse.busy = false;\n        the_mouse.setOffset(0, 0);\n        the_mouse.effect = null;\n      } else { //other clicks\n\n\n        if (mouse_over_next && current_task_index < task_details.length) {\n          current_task_index++;\n        } else if (mouse_over_prev && current_task_index > 0) {\n          current_task_index--;\n        }\n\n        if (mouse_over_queuer && current_task_index == task_details.length && !sending) {\n          p.submit();\n        }\n\n        p.mouse_click_while_editing();\n\n\n        for (let b of buttons) { //clicking on a button with an empty hand\n          if (b.mouseInRegion()) {\n            the_mouse.busy = true;\n            the_mouse.setOffset(b.text_x, b.text_y);\n            the_mouse.effect = JSON.parse(JSON.stringify(effects[b.button_name]));\n\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n\n\n  //returns true if you need to return out of mouse\n  p.progress_survey_through_issues = () => {\n    if (current_survey_topic == survey_topics.length) {\n      p.finished_survey();\n      return true;\n    }\n\n    for (let i = 0; i < survey_topics.length; i++) {\n      if (the_mouse.effect.settings[survey_topics[current_survey_topic]][0] == null ||\n        (!param_format_names.includes(the_mouse.effect.settings[survey_topics[current_survey_topic]][0][0]) &&\n          the_mouse.effect.settings[survey_topics[current_survey_topic]][0].length == 1)) {\n        current_survey_topic++;\n        if (current_survey_topic == survey_topics.length) {\n          p.finished_survey();\n          return true;\n        }\n      }\n    }\n\n\n    if (current_survey_topic == survey_topics.length) {\n      p.finished_survey();\n      return true;\n    }\n\n\n    return false;\n  }\n\n  p.drop_effect_on_card = (c) => {\n    current_survey_topic = 1;\n    survey_drop_target = c;\n\n    if (p.progress_survey_through_issues()) {\n\n      return\n    }\n  }\n\n\n  p.click_to_edit_card = (c) => {\n\n    if (c.mouse_over_mana) {\n      editing = \"mana\";\n      editing_card = c;\n    } else if (c.mouse_over_power) {\n      editing = \"power\";\n      editing_card = c;\n    } else if (c.mouse_over_toughness && !(editing == \"effect\" && p.dist(p.mouseX, p.mouseY, editX, editY) < 10)) {\n      editing = \"toughness\";\n      editing_card = c;\n    } else if (c.mouse_over_card_effect && !(editing == \"effect\" && p.dist(p.mouseX, p.mouseY, editX, editY) < 10)) {\n      editing = \"effect\";\n      editX = c.hovered_effect.x + blank_spell_img.width / 2;\n      editY = c.hovered_effect.y + c.hovered_effect.effect_string_height / 2;\n      editing_card = c;\n      effect_to_remove = c.hovered_effect;\n    } else if (editing == \"effect\" && p.dist(p.mouseX, p.mouseY, editX, editY) < 10) {\n      editing_card.effects.splice(editing_card.effects.indexOf(effect_to_remove), 1);\n      editing = \"none\";\n    } else {\n      editing = \"none\";\n    }\n  }\n\n\n  p.mouse_click_while_editing = () => {\n    if (editing == \"mana\") {\n      if (p.dist(p.mouseX, p.mouseY, editX - 60, editY - 50) < 40) {\n        editing_card.mana--;\n      } else if (p.dist(p.mouseX, p.mouseY, editX + 60, editY - 50) < 40) {\n        editing_card.mana++;\n      } else {\n        editing = \"none\"\n      }\n      editing_card.mana = p.constrain(editing_card.mana, 0, 10)\n    } else if (editing == \"power\") {\n\n      if (p.dist(p.mouseX, p.mouseY, editX - 60, editY + 50) < 40) {\n        editing_card.power--;\n      } else if (p.dist(p.mouseX, p.mouseY, editX + 60, editY + 50) < 40) {\n        editing_card.power++;\n      } else {\n        editing = \"none\"\n      }\n      editing_card.power = p.constrain(editing_card.power, 0, 10)\n    } else if (editing == \"toughness\") {\n\n      if (p.dist(p.mouseX, p.mouseY, editX - 60, editY + 50) < 40) {\n        editing_card.toughness--;\n      } else if (p.dist(p.mouseX, p.mouseY, editX + 60, editY + 50) < 40) {\n        editing_card.toughness++;\n      } else {\n        editing = \"none\"\n      }\n      editing_card.toughness = p.constrain(editing_card.toughness, 1, 10)\n    } else if (editing == \"effect\") {\n      editing = \"none\";\n    }\n  }\n\n\n  p.draw_edit_overlay = () => {\n    p.push();\n    if (editing != \"none\") {\n      p.translate(editX, editY)\n      p.noStroke();\n      if (editing == \"effect\") {\n        p.rotate(p.QUARTER_PI);\n        p.fill(0);\n        p.rect(0, 0, 22, 6);\n        p.rect(0, 0, 6, 22);\n        p.fill(255);\n        p.rect(0, 0, 20, 4);\n        p.rect(0, 0, 4, 20);\n\n      } else {\n        p.fill(0);\n        p.rect(-60, editing == \"mana\" ? -50 : 75, 32, 8);\n        p.rect(60, editing == \"mana\" ? -50 : 75, 32, 8);\n        p.rect(60, editing == \"mana\" ? -50 : 75, 8, 32);\n        p.fill(255);\n        p.rect(-60, editing == \"mana\" ? -50 : 75, 30, 6);\n        p.rect(60, editing == \"mana\" ? -50 : 75, 30, 6);\n        p.rect(60, editing == \"mana\" ? -50 : 75, 6, 30);\n      }\n    }\n    p.pop();\n  }\n\n  p.mousePressed = () => {\n    if (setup_done) {\n      if (survey_topics[current_survey_topic] != \"none\") {\n        p.mouse_pressed_while_surveying();\n      } else {\n        p.mouse_pressed_while_not_surveying();\n      }\n    }\n  }\n\n  p.finished_survey = () => {\n\n    survey_drop_target.effects.push(JSON.parse(JSON.stringify(the_mouse.effect)))\n    current_survey_topic = 0;\n    the_mouse.effect = null;\n    the_mouse.busy = false;\n  }\n\n  p.keyPressed = () => {\n\n\n  }\n\n  p.windowResized = () => {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n    p.resize_all();\n  }\n\n  p.ease_out_cubic = (x) => {\n    return 1 - p.pow(1 - x, 3);\n  }\n\n\n  p.send_overlay = () => {\n    p.push();\n    let queur_x = p.width - w_padding;\n    let queur_y = p.height - h_padding;\n    mouse_over_queuer = (p.mouseX > queur_x - 100 && p.mouseX < queur_x + 100 && p.mouseY > queur_y - 30 && p.mouseY < queur_y + 30)\n\n    p.translate(queur_x, queur_y);\n\n    if (sending) {\n      let q = p.map(p.millis(), send_start_time, send_start_time + estimated_send_duration, 0, 1, true)\n      q = p.ease_out_cubic(q);\n\n      p.fill(255, p.map(q, 0, 1, 50, 100));\n      p.rect(p.map(q, 0, 1, -100, 0), 0, p.map(q, 0, 1, 0, 200), 60, 4);\n      p.rect(0, 0, 200, 60, 4);\n    } else {\n      p.fill(255, mouse_over_queuer ? 255 : 100);\n      p.rect(0, 0, 200, 60, 4)\n    }\n\n\n\n    p.fill(0, 255);\n    p.textAlign(p.CENTER, p.CENTER)\n    p.text(sending ? sent ? \"Sending again...\" : \"Sending...\" : sent ? mouse_over_queuer ? \"Send again\" : \"Done.\" : \"Send to sheets\", 0, -4)\n    p.pop();\n\n  }\n\n  p.submit = () => {\n    if (!sending) {\n      sending = true;\n      send_start_time = p.millis();\n\n      const submissions = p.generate_submissions();\n\n      props.send_to_google_sheets(submissions).then((result) => {\n        console.log(result);\n        sending = false;\n        sent = true;\n\n      })\n    }\n  }\n\n  p.load_save = () => {\n    tasks = JSON.parse(asString);\n    for(let t of tasks){\n      for(let c of t){\n        c.__proto__ = p.Card.prototype;\n      }\n    }\n\n  }\n\n  p.make_save = () => {\n    let asString = JSON.stringify(tasks)\n\n    props.save_to_google_sheets(asString).then((result) => {\n      console.log(result);\n      sending = false;\n      sent = true;\n\n    })\n  }\n\n  p.generate_submissions = () => {\n    const submissions = [];\n   \n    for (let t of tasks) {\n      for (let c of t) {\n        let card_submission = {\n          id: c.card_id,\n          task: c.card_task_index,\n          user: user ?? \"noUser\",\n          p: c.power,\n          t: c.toughness,\n          m: c.mana,\n        }\n\n\n        let repeat_checker = {};\n\n        for (let e of c.effects) {\n          if (repeat_checker[e.effect_short] == undefined) {\n            repeat_checker[e.effect_short] = 0;\n          } else {\n            repeat_checker[e.effect_short]++;\n          }\n\n          if (e.settings.methods[0] != null) card_submission[e.effect_short + \"-method-\" + repeat_checker[e.effect_short]] = e.settings.methods[1];\n          if (e.settings.params[0] != null) card_submission[e.effect_short + \"-param-\" + repeat_checker[e.effect_short]] = e.settings.params[1];\n          if (e.settings.targets[0] != null) card_submission[e.effect_short + \"-target-\" + repeat_checker[e.effect_short]] = e.settings.targets[1];\n          if (e.settings.filters[0] != null) card_submission[e.effect_short + \"-filter-\" + repeat_checker[e.effect_short]] = e.settings.filters[1];\n          if (e.settings.duration[0] != null) card_submission[e.effect_short + \"-duration-\" + repeat_checker[e.effect_short]] = e.settings.duration[1];\n\n        }\n        submissions[c.card_task_index + \"-\" + c.card_id] = card_submission;\n      }\n    }\n\n    return submissions;\n  }\n\n  p.resize_all = () => {\n    for (let b of buttons) {\n      b.resized();\n    }\n\n    for (let t of tasks) {\n      for (let c of t) {\n        c.resized();\n      }\n    }\n\n    p.generate_masks();\n\n  }\n\n  p.generate_masks = () => {\n    ellipse_mask = p.createGraphics(250, 250);\n    ellipse_mask.ellipse(ellipse_mask.width / 2, ellipse_mask.height / 2, 200, 200)\n\n    rect_mask = p.createGraphics(250, 250);\n    rect_mask.rectMode(p.CENTER);\n    rect_mask.rect(rect_mask.width / 2, rect_mask.height / 2, 200, 160)\n  }\n\n  p.register_effect = (effect_text, effect_short, method, param, targets, filters, duration) => {\n\n    effects[effect_text] = new p.Effect(effect_text, effect_short, method, param, targets, filters, duration);\n    buttons.push(new p.Button(effect_text, button_id++));\n  }\n\n  p.register_all = () => {\n\n    p.register_effect(\"Deal damage\", \"dam\",\n      [\"randomly\", \"targeted\", \"all\"],\n      [\"x\"],\n      [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\"],\n      [\"enemy\", \"friendly\", \"all\"],\n      null);\n\n    p.register_effect(\"Destroy\", \"des\",\n      [\"randomly\", \"targeted\", \"all\"],\n      null,\n      [\"minions\", \"murlocs\", \"beasts\", \"demons\", \"totems\", \"weapons\"],\n      [\"enemy\", \"friendly\", \"all\"],\n      null);\n\n    p.register_effect(\"Heal\", \"hea\",\n      [\"randomly\", \"targeted\", \"all\"],\n      [\"x\"],\n      [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\"],\n      [\"enemy\", \"friendly\", \"all\"],\n      null);\n\n    p.register_effect(\"Gain armour\", \"arm\",\n      null,\n      [\"x\"],\n      null,\n      null,\n      null);\n\n    p.register_effect(\"Change stats\", \"cha\",\n      [\"randomly\", \"targeted\", \"all\", \"aura\"],\n      [\"x/x\"],\n      [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\", \"weapons\"],\n      [\"enemy\", \"friendly\", \"all\"],\n      [\"turn\", \"permanently\"]);\n\n    p.register_effect(\"Set stats\", \"set\",\n      [\"randomly\", \"targeted\", \"all\", \"aura\"],\n      [\"x/x\"],\n      [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\", \"weapons\"],\n      [\"enemy\", \"friendly\", \"all\"],\n      [\"turn\", \"permanently\"]);\n\n\n    p.register_effect(\"Give keyword\", \"giv\",\n      [\"randomly\", \"targeted\", \"all\", \"aura\"],\n      [\"k\"],\n      [\"minions\", \"heroes\", \"minions or heroes\", \"murlocs\", \"beasts\", \"demons\", \"totems\", \"weapons\"],\n      [\"enemy\", \"friendly\", \"all\"],\n      [\"turn\", \"permanently\"]);\n\n    p.register_effect(\"Return to hand\", \"ret\",\n      [\"randomly\", \"targeted\", \"all\"],\n      null,\n      [\"minions\", \"murlocs\", \"beasts\", \"demons\", \"totems\"],\n      [\"enemy\", \"friendly\", \"all\"],\n      null);\n\n\n    p.register_effect(\"Draw\", \"dra\",\n      null,\n      [\"x\"],\n      null,\n      [\"enemy\", \"friendly\", \"all\"],\n      null);\n\n\n    p.register_effect(\"Gain mana\", \"gai\",\n      null,\n      [\"x\"],\n      null,\n      [\"enemy\", \"friendly\", \"all\"],\n      null);\n\n    p.register_effect(\"Summon\", \"sum\",\n      null,\n      [\"x/x\"],\n      null,\n      null,\n      null);\n\n    p.register_effect(\"Keyword\", \"key\",\n      null,\n      [\"k\"],\n      null,\n      null,\n      null);\n\n    p.register_effect(\"Creature type\", \"cre\",\n      null,\n      [\"c\"],\n      null,\n      null,\n      null);\n\n\n\n  }\n\n\n  p.FancyMouse = class {\n    constuctor() {\n      this.busy = false;\n      this.xOffset = 0;\n      this.yOffset = 0;\n      this.effect = null;\n    }\n    setOffset(buttonX, buttonY) {\n      this.xOffset = p.mouseX - buttonX;\n      this.yOffset = p.mouseY - buttonY;\n    }\n  }\n\n\n\n\n\n  p.Effect = class {\n    constructor(label_name, effect_short, methods, param_format, targets, filters, duration) {\n      this.x = 0;\n      this.y = 0;\n\n      this.effect_string = \"\";\n      this.effect_string_height = 0;\n      this.effect_string_width = blank_spell_img.width * 0.5;\n      this.label_name = label_name;\n      this.effect_short = effect_short;\n\n      this.settings = {\n        methods: [methods, \"\"],\n        params: [param_format, \"\"],\n        targets: [targets, \"\"],\n        filters: [filters, \"\"],\n        duration: [duration, \"\"]\n      };\n    }\n  }\n\n\n  p.Card = class {\n    constructor(card_id, card_task_index, card_class) {\n      this.y = 0;\n      this.x = 0;\n      this.w = blank_spell_img.width * 0.75;\n      this.h = blank_spell_img.height * 0.75;\n      this.oversized = false;\n\n\n      this.class = card_class;\n      this.type_id = 1; //creature\n      this.card_id = card_id;\n      this.card_task_index = card_task_index;\n\n\n      this.flav_img_index = p.floor(p.random(gan_imgs.length));\n      this.mana = 5;\n      this.power = 5;\n      this.toughness = 5;\n      this.effects = [];\n\n      this.hovered_effect = null;\n      this.mouse_over_card_effect = false;\n      this.mouse_over_mana = false;\n      this.mouse_over_power = false;\n      this.mouse_over_toughness = false;\n\n\n    }\n\n    resized() {\n      if (tasks[this.card_task_index].length == 1) {\n        this.x = p.map(2, 0, 3, w_padding, p.width - w_padding)\n      } else if (tasks[this.card_task_index].length == 2) {\n        this.x = p.map(this.card_id == 0 ? 1.5 : 2.5, 0, 3, w_padding, p.width - w_padding)\n      } else {\n        this.x = p.map(this.card_id + 1, 0, 3, w_padding, p.width - w_padding)\n      }\n      this.y = p.height / 2;\n    }\n\n    run() {\n      this.generate_effect_text();\n      this.check_mouse_hovers();\n      this.display();\n    }\n\n    generate_effect_text() {\n      for (let e of this.effects) {\n        e.effect_string = \"\";\n        if (e.label_name == \"Keyword\" || e.label_name == \"Creature type\") {\n          e.effect_string = e.settings.params[1];\n        } else if (e.label_name == \"Deal damage\") {\n          if (e.settings.methods[1] == \"randomly\") {\n            e.effect_string = \"Randomly deal \" + e.settings.params[1] + \" damage to a \";\n          } else if (e.settings.methods[1] == \"targeted\") {\n            e.effect_string = \"Deal \" + e.settings.params[1] + \" damage to target \";\n          } else {\n            e.effect_string = \"Deal \" + e.settings.params[1] + \" damage to all \"\n          }\n\n          e.effect_string += e.settings.filters[1] == \"all\" ? \"\" : e.settings.filters[1] + \" \" //remove \"all all\"\n          if (e.settings.methods[1] == \"all\") {\n            e.effect_string += e.settings.targets[1]\n          } else {\n            e.effect_string += target_names_singular[target_names.indexOf(e.settings.targets[1])]\n          }\n        } else if (e.label_name == \"Destroy\") {\n          if (e.settings.methods[1] == \"randomly\") {\n            e.effect_string = \"Randomly destroy a \";\n          } else if (e.settings.methods[1] == \"targeted\") {\n            e.effect_string = \"Destroy a target \";\n          } else {\n            e.effect_string = \"Destroy all \"\n          }\n          e.effect_string += e.settings.filters[1] == \"all\" ? \"\" : e.settings.filters[1] + \" \" //remove \"all all\"\n          if (e.settings.methods[1] == \"all\") {\n            e.effect_string += e.settings.targets[1]\n          } else {\n            e.effect_string += target_names_singular[target_names.indexOf(e.settings.targets[1])]\n          }\n        } else if (e.label_name == \"Heal\") {\n          if (e.settings.methods[1] == \"randomly\") {\n            e.effect_string = \"Restore \" + e.settings.params[1] + \" health to a random \";\n          } else if (e.settings.methods[1] == \"targeted\") {\n            e.effect_string = \"Restore \" + e.settings.params[1] + \" health to a target \";\n          } else {\n            e.effect_string = \"Restore \" + e.settings.params[1] + \" health to all \";\n          }\n          e.effect_string += e.settings.filters[1] == \"all\" ? \"\" : e.settings.filters[1] + \" \" //remove \"all all\"\n          if (e.settings.methods[1] == \"all\") {\n            e.effect_string += e.settings.targets[1]\n          } else {\n            e.effect_string += target_names_singular[target_names.indexOf(e.settings.targets[1])]\n          }\n        } else {\n          e.effect_string = e.label_name\n        }\n\n\n\n        let estimated_characters_per_line = 20;\n        let estimated_lines = e.effect_string.length / estimated_characters_per_line;\n        e.effect_string_height = font_pixels_small * estimated_lines + 30;\n\n      }\n\n    }\n\n    display() {\n\n      p.push();\n      p.fill(0);\n      p.textAlign(p.CENTER, p.CENTER)\n      if (this.effects.length > 2) {\n        this.oversized = true;\n      } else {\n        this.oversized = false;\n      }\n\n\n      let flav = gan_imgs[this.flav_img_index].get();\n      let forg;\n\n      if (card_types[this.type_id] == \"spell\") {\n        flav.mask(rect_mask)\n        forg = blank_spell_img;\n      } else if (card_types[this.type_id] == \"minion\") {\n        flav.mask(ellipse_mask)\n        forg = this.oversized ? full_blank_creature_img : blank_creature_img;\n      } else {\n        flav.mask(rect_mask)\n        forg = blank_weapon_img;\n      }\n\n      if (!this.oversized) {\n        p.image(flav, this.x, this.y - 90, 250, 250)\n      }\n      p.image(forg, this.x, this.y, this.w, this.h);\n\n      p.push();\n      p.textSize(60);\n      p.fill(255);\n      p.strokeWeight(3);\n      p.stroke(0);\n\n      if (card_types[this.type_id] == \"minion\") {\n        p.text(this.power, this.x - this.w / 2.99, this.y + this.h / 2.8)\n        p.text(this.toughness, this.x + this.w / 2.6, this.y + this.h / 2.8)\n      }\n\n\n      p.text(this.mana, this.x - this.w / 2.99, this.y - this.h / 2.3)\n\n      p.pop();\n\n\n      p.push();\n      p.fill(0);\n      p.textSize(font_pixels_small);\n      let translation_offset_y;\n      if (this.oversized) {\n        translation_offset_y = this.y - this.h / 2 + 80;\n        p.translate(this.x, this.y - this.h / 2 + 80);\n      } else {\n        translation_offset_y = this.y + 50;\n        p.translate(this.x, this.y + 50);\n      }\n\n      this.mouse_over_card_effect = false;\n      this.hovered_effect = null;\n\n      for (let e of this.effects) {\n\n        translation_offset_y += e.effect_string_height / 2;\n        p.translate(0, e.effect_string_height / 2)\n\n        if (p.mouseY > translation_offset_y - e.effect_string_height / 2 &&\n          p.mouseY < translation_offset_y + e.effect_string_height / 2 &&\n          p.mouseX > this.x - e.effect_string_width / 2 &&\n          p.mouseX < this.x + e.effect_string_width / 2) {\n\n          this.mouse_over_card_effect = true;\n\n          this.hovered_effect = e;\n          this.hovered_effect.x = this.x - e.effect_string_width / 2;\n          this.hovered_effect.y = translation_offset_y - e.effect_string_height;\n          p.fill(0, 100);\n        } else {\n          p.fill(0, 50)\n        }\n\n        p.rect(0, 0, e.effect_string_width, e.effect_string_height, 4, 4)\n        p.fill(255, 255)\n        p.text(e.effect_string, 0, 0, blank_spell_img.width / 2, blank_spell_img.height / 2)\n        translation_offset_y += e.effect_string_height / 2 + 5;\n        p.translate(0, e.effect_string_height / 2 + 5)\n\n      }\n      p.pop();\n\n\n      p.push();\n\n      if (editing_card == this) {\n        if (editing == \"mana\") {\n          editX = this.x - this.w / 2.99;\n          editY = this.y - this.h / 2.3;\n        } else if (editing == \"power\") {\n          editX = this.x - this.w / 2.99;\n          editY = this.y + this.h / 2.8;\n        } else if (editing == \"toughness\") {\n          editX = this.x + this.w / 2.6;\n          editY = this.y + this.h / 2.8;\n        }\n      }\n\n      p.pop();\n      p.pop();\n    }\n\n\n    mouseInImg() {\n      return (p.mouseX > this.x - this.w / 2 - mouse_padding &&\n        p.mouseX < this.x + this.w / 2 + mouse_padding &&\n        p.mouseY > this.y - this.h / 2 - mouse_padding &&\n        p.mouseY < this.y + this.h / 2 + mouse_padding);\n\n    }\n    check_mouse_hovers() {\n      if (card_types[this.type_id] == \"minion\") {\n        this.mouse_over_power = p.dist(p.mouseX, p.mouseY, this.x - this.w / 2.99, this.y + this.h / 2.8) < 50\n        this.mouse_over_toughness = p.dist(p.mouseX, p.mouseY, this.x + this.w / 2.6, this.y + this.h / 2.8) < 50\n      }\n      this.mouse_over_mana = p.dist(p.mouseX, p.mouseY, this.x - this.w / 2.99, this.y - this.h / 2.3) < 50\n    }\n  }\n\n\n\n\n\n  p.Button = class {\n\n    constructor(button_name, button_id) {\n      this.button_name = button_name;\n      this.button_id = button_id;\n\n      this.x = 0;\n      this.y = 0;\n      this.w = p.textWidth(button_name) + 14;\n      this.h = font_pixels + 10;\n      this.fillAlpha = 100;\n\n      this.text_x = 0;\n      this.text_y = 0;\n    }\n    mouseInRegion() {\n      return (p.mouseX > this.x - this.w / 2 - mouse_padding &&\n        p.mouseX < this.x + this.w / 2 + mouse_padding &&\n        p.mouseY > this.y - this.h / 2 - mouse_padding &&\n        p.mouseY < this.y + this.h / 2 + mouse_padding);\n    }\n\n    resized() {\n      this.x = w_padding - 150 + this.w / 2 - 7;\n      this.y = p.map(this.button_id, 0, buttons.length, h_padding, p.height - h_padding);\n      this.text_x = this.x - this.w / 2 + 7;\n      this.text_y = this.y - 6;\n    }\n\n    run() {\n      this.update();\n      this.display();\n    }\n\n    update() {\n\n      if (this.mouseInRegion() && current_survey_topic == 0) {\n        this.fillAlpha = 255;\n      } else {\n        this.fillAlpha = 100;\n      }\n\n    }\n\n    display() {\n\n\n      p.textSize(font_pixels)\n      p.textAlign(p.LEFT, p.CENTER)\n      p.fill(255, this.fillAlpha);\n      p.rect(this.x, this.y, this.w, this.h, 4, 4);\n      p.fill(0, 255);\n      p.text(this.button_name, this.text_x, this.text_y);\n    }\n\n\n  }\n\n\n  document.oncontextmenu = function () {\n    return false;\n  }\n\n\n}"]},"metadata":{},"sourceType":"module"}
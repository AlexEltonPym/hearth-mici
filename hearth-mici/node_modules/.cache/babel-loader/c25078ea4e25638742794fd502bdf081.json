{"ast":null,"code":"\"use strict\"; // The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pruneNulls = exports.applyChange = void 0;\n/** @hidden */\n\nconst _ = require(\"lodash\");\n\nfunction applyChange(src, dest) {\n  // if not mergeable, don't merge\n  if (!_.isPlainObject(dest) || !_.isPlainObject(src)) {\n    return dest;\n  }\n\n  return pruneNulls(_.merge({}, src, dest));\n}\n\nexports.applyChange = applyChange;\n\nfunction pruneNulls(obj) {\n  for (const key in obj) {\n    if (obj[key] === null) {\n      delete obj[key];\n    } else if (_.isPlainObject(obj[key])) {\n      pruneNulls(obj[key]);\n    }\n  }\n\n  return obj;\n}\n\nexports.pruneNulls = pruneNulls;","map":{"version":3,"sources":["/Users/aep/phd/hearth-mici/node_modules/firebase-functions/lib/utils.js"],"names":["Object","defineProperty","exports","value","pruneNulls","applyChange","_","require","src","dest","isPlainObject","merge","obj","key"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,WAAR,GAAsB,KAAK,CAAhD;AACA;;AACA,MAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,SAASF,WAAT,CAAqBG,GAArB,EAA0BC,IAA1B,EAAgC;AAC5B;AACA,MAAI,CAACH,CAAC,CAACI,aAAF,CAAgBD,IAAhB,CAAD,IAA0B,CAACH,CAAC,CAACI,aAAF,CAAgBF,GAAhB,CAA/B,EAAqD;AACjD,WAAOC,IAAP;AACH;;AACD,SAAOL,UAAU,CAACE,CAAC,CAACK,KAAF,CAAQ,EAAR,EAAYH,GAAZ,EAAiBC,IAAjB,CAAD,CAAjB;AACH;;AACDP,OAAO,CAACG,WAAR,GAAsBA,WAAtB;;AACA,SAASD,UAAT,CAAoBQ,GAApB,EAAyB;AACrB,OAAK,MAAMC,GAAX,IAAkBD,GAAlB,EAAuB;AACnB,QAAIA,GAAG,CAACC,GAAD,CAAH,KAAa,IAAjB,EAAuB;AACnB,aAAOD,GAAG,CAACC,GAAD,CAAV;AACH,KAFD,MAGK,IAAIP,CAAC,CAACI,aAAF,CAAgBE,GAAG,CAACC,GAAD,CAAnB,CAAJ,EAA+B;AAChCT,MAAAA,UAAU,CAACQ,GAAG,CAACC,GAAD,CAAJ,CAAV;AACH;AACJ;;AACD,SAAOD,GAAP;AACH;;AACDV,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pruneNulls = exports.applyChange = void 0;\n/** @hidden */\nconst _ = require(\"lodash\");\nfunction applyChange(src, dest) {\n    // if not mergeable, don't merge\n    if (!_.isPlainObject(dest) || !_.isPlainObject(src)) {\n        return dest;\n    }\n    return pruneNulls(_.merge({}, src, dest));\n}\nexports.applyChange = applyChange;\nfunction pruneNulls(obj) {\n    for (const key in obj) {\n        if (obj[key] === null) {\n            delete obj[key];\n        }\n        else if (_.isPlainObject(obj[key])) {\n            pruneNulls(obj[key]);\n        }\n    }\n    return obj;\n}\nexports.pruneNulls = pruneNulls;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar fetch = require(\"isomorphic-fetch\");\n\nvar camelCase = require(\"camelcase\"); // subtituted code of <script src=\"https://apis.google.com/js/api.js\"></script> at index.html\n\n\nvar gapi = require(\"./gapi\");\n\nfunction GoogleSheetConnector(options, onLoad) {\n  var _this = this;\n\n  var sheetsData = [];\n  this.sheetsLoaded = 0;\n  this.apiKey = options.apiKey;\n  this.clientId = options.clientId;\n  this.spreadsheetId = options.spreadsheetId;\n  this.initialise();\n\n  this.getSheetsData = function () {\n    return sheetsData.slice();\n  };\n\n  this.setSheetsData = function (data) {\n    sheetsData = data;\n    this.sheetsLoaded++;\n\n    if (this.sheetsLoaded === this.numSheets) {\n      onDataLoaded.call(this);\n    }\n  };\n\n  function onDataLoaded() {\n    this.setSheetsData = null;\n    console.info(\"Data successfuly loaded from Spreadsheet\");\n\n    if (onLoad) {\n      onLoad.call(this);\n    }\n  }\n\n  this.updateCell = function (sheetName, column, row, value, successCallback, errorCallback) {\n    var data = {\n      spreadsheetId: _this.spreadsheetId,\n      range: sheetName + '!' + column + row,\n      valueInputOption: 'USER_ENTERED',\n      values: [[value]]\n    };\n    gapi.client.sheets.spreadsheets.values.update(data).then(successCallback, errorCallback);\n  };\n}\n\nGoogleSheetConnector.prototype = {\n  initialise: function initialise() {\n    console.info(\"Loading data from Spreadsheet\");\n\n    if (this.clientId) {\n      return gapi.load(\"client:auth2\", this.initClient.bind(this));\n    } else if (this.apiKey) {\n      var url = [\"https://sheets.googleapis.com/v4/spreadsheets/\", this.spreadsheetId, \"?key=\", this.apiKey].join(\"\");\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return this.loadSheetsData(data);\n      }.bind(this));\n    } else {\n      console.info(\"You must specify a valid Client ID or API Key\");\n    }\n  },\n  loadSheetsData: function loadSheetsData(data) {\n    this.numSheets = data.sheets.length;\n    data.sheets.forEach(function (sheet) {\n      return this.loadSheetViaKey(sheet.properties.title);\n    }, this);\n  },\n  loadSpreadsheet: function loadSpreadsheet() {\n    gapi.client.sheets.spreadsheets.get({\n      spreadsheetId: this.spreadsheetId\n    }).then(function (response) {\n      var sheets = JSON.parse(response.body).sheets;\n      this.numSheets = sheets.length;\n      sheets.forEach(this.loadSheetViaAuth, this);\n    }.bind(this));\n  },\n  loadSheetViaAuth: function loadSheetViaAuth(sheet) {\n    gapi.client.sheets.spreadsheets.values.get({\n      spreadsheetId: this.spreadsheetId,\n      range: sheet.properties.title\n    }).then(function (response) {\n      var values = JSON.parse(response.body).values;\n      this.loadSheet(sheet.properties.title, values);\n    }.bind(this));\n  },\n  loadSheetViaKey: function loadSheetViaKey(sheetName) {\n    var url = [\"https://sheets.googleapis.com/v4/spreadsheets/\", this.spreadsheetId, \"/values/\", sheetName, \"?key=\", this.apiKey].join(\"\");\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      var values = json.values;\n      this.loadSheet(sheetName, values);\n    }.bind(this));\n  },\n  loadSheet: function loadSheet(sheetName, values) {\n    var headerRow = values[0];\n    var dataRows = values.slice(1);\n    var keys = headerRow.map(function (value) {\n      return camelCase(value);\n    }, this);\n    var sheetsData = this.getSheetsData();\n    sheetsData = sheetsData.concat({\n      name: sheetName,\n      header: headerRow,\n      keys: keys,\n      data: this.loadRowsData(keys, dataRows)\n    });\n    this.setSheetsData(sheetsData);\n  },\n  loadRowsData: function loadRowsData(keys, values) {\n    return values.map(function (row) {\n      keys.forEach(function (key, i) {\n        row[key] = row[i];\n      });\n      return row;\n    });\n  },\n  initClient: function initClient() {\n    gapi.client.init({\n      discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\n      clientId: this.clientId,\n      scope: \"https://www.googleapis.com/auth/spreadsheets\"\n    }).then(function () {\n      var authInstance = gapi.auth2.getAuthInstance();\n\n      if (authInstance.isSignedIn.get()) {\n        this.loadSpreadsheet();\n      } else {\n        authInstance.isSignedIn.listen(this.updateSigninStatus.bind(this));\n        authInstance.signIn();\n      }\n    }.bind(this));\n  },\n  updateSigninStatus: function updateSigninStatus(isSignedIn) {\n    if (isSignedIn) {\n      this.loadSpreadsheet();\n    }\n  },\n  getSheet: function getSheet(sheetName) {\n    return new SheetData(this.getSheetsData(), sheetName);\n  }\n};\n\nfunction SheetData(sheetsData, sheetName) {\n  var sheet = sheetsData.find(function (sheet) {\n    return sheet.name === sheetName;\n  }) || {\n    data: [],\n    values: []\n  };\n  this.header = sheet.header;\n  this.keys = sheet.keys;\n  var data = sheet.data;\n  var currentData = data.slice();\n\n  this.getData = function () {\n    return data.slice();\n  };\n\n  this.getCurrentData = function () {\n    return currentData.slice();\n  };\n\n  this.setCurrentData = function (newData) {\n    currentData = newData;\n  };\n}\n\nSheetData.prototype = {\n  map: function map(callback) {\n    return this.getCurrentData().map(callback);\n  },\n  filter: function filter(filterObj, strValue) {\n    var newData = this.getData().filter(function (row) {\n      if ((typeof filterObj === \"undefined\" ? \"undefined\" : _typeof(filterObj)) === \"object\") {\n        for (var i in filterObj) {\n          if (!row.hasOwnProperty(i) || row[i] !== filterObj[i]) {\n            return false;\n          }\n        }\n      } else {\n        var colIndex = this.header.indexOf(filterObj);\n        if (row[colIndex] !== strValue) return false;\n      }\n\n      return true;\n    }, this);\n    this.setCurrentData(newData);\n    return this;\n  },\n  group: function group(colName, sort) {\n    var groups = [];\n    var colIndex = this.header.indexOf(colName);\n    if (colIndex === -1) return this;\n    this.getCurrentData().forEach(function (row) {\n      var groupName = row[colIndex];\n      var groupIndex = -1;\n      groups.forEach(function (group, i) {\n        if (group.name === groupName) groupIndex = i;\n      });\n\n      if (groupIndex > -1) {\n        groups[groupIndex].data.push(row);\n      } else {\n        groups.push({\n          name: groupName,\n          data: [row]\n        });\n      }\n    });\n    if (sort) sortArray(groups, \"name\");\n    this.setCurrentData(groups);\n    this.dataIsGrouped = true;\n    return this;\n  },\n  sort: function sort(colName) {\n    var newData = this.getCurrentData();\n\n    if (this.dataIsGrouped) {\n      newData.forEach(function (group) {\n        sortArray(group.data, camelCase(colName));\n      });\n    } else {\n      sortArray(newData, camelCase(colName));\n    }\n\n    this.setCurrentData(newData);\n    return this;\n  },\n  reverse: function reverse() {\n    var newData = this.getCurrentData();\n    newData.reverse();\n    this.setCurrentData(newData);\n    return this;\n  }\n};\n\nfunction sortArray(array, orderBy) {\n  array.sort(function (a, b) {\n    var textA = a[orderBy] ? a[orderBy].toUpperCase() : \"\";\n    var textB = b[orderBy] ? b[orderBy].toUpperCase() : \"\";\n    if (textA < textB) return -1;\n    return textA > textB ? 1 : 0;\n  });\n}\n\nmodule.exports = GoogleSheetConnector;","map":{"version":3,"sources":["/Users/aep/phd/hearth-mici/node_modules/react-google-sheets/google-sheet-connector/index.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","fetch","require","camelCase","gapi","GoogleSheetConnector","options","onLoad","_this","sheetsData","sheetsLoaded","apiKey","clientId","spreadsheetId","initialise","getSheetsData","slice","setSheetsData","data","numSheets","onDataLoaded","call","console","info","updateCell","sheetName","column","row","value","successCallback","errorCallback","range","valueInputOption","values","client","sheets","spreadsheets","update","then","load","initClient","bind","url","join","response","json","loadSheetsData","length","forEach","sheet","loadSheetViaKey","properties","title","loadSpreadsheet","get","JSON","parse","body","loadSheetViaAuth","loadSheet","headerRow","dataRows","keys","map","concat","name","header","loadRowsData","key","i","init","discoveryDocs","scope","authInstance","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","signIn","getSheet","SheetData","find","currentData","getData","getCurrentData","setCurrentData","newData","callback","filter","filterObj","strValue","hasOwnProperty","colIndex","indexOf","group","colName","sort","groups","groupName","groupIndex","push","sortArray","dataIsGrouped","reverse","array","orderBy","a","b","textA","toUpperCase","textB","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar fetch = require(\"isomorphic-fetch\");\nvar camelCase = require(\"camelcase\");\n// subtituted code of <script src=\"https://apis.google.com/js/api.js\"></script> at index.html\nvar gapi = require(\"./gapi\");\n\nfunction GoogleSheetConnector(options, onLoad) {\n    var _this = this;\n\n    var sheetsData = [];\n    this.sheetsLoaded = 0;\n    this.apiKey = options.apiKey;\n    this.clientId = options.clientId;\n    this.spreadsheetId = options.spreadsheetId;\n\n    this.initialise();\n\n    this.getSheetsData = function () {\n        return sheetsData.slice();\n    };\n\n    this.setSheetsData = function (data) {\n        sheetsData = data;\n\n        this.sheetsLoaded++;\n\n        if (this.sheetsLoaded === this.numSheets) {\n            onDataLoaded.call(this);\n        }\n    };\n\n    function onDataLoaded() {\n        this.setSheetsData = null;\n        console.info(\"Data successfuly loaded from Spreadsheet\");\n        if (onLoad) {\n            onLoad.call(this);\n        }\n    }\n    this.updateCell = function (sheetName, column, row, value, successCallback, errorCallback) {\n        var data = {\n            spreadsheetId: _this.spreadsheetId,\n            range: sheetName + '!' + column + row,\n            valueInputOption: 'USER_ENTERED',\n            values: [[value]]\n        };\n        gapi.client.sheets.spreadsheets.values.update(data).then(successCallback, errorCallback);\n    };\n}\n\nGoogleSheetConnector.prototype = {\n\n    initialise: function initialise() {\n        console.info(\"Loading data from Spreadsheet\");\n        if (this.clientId) {\n            return gapi.load(\"client:auth2\", this.initClient.bind(this));\n        } else if (this.apiKey) {\n            var url = [\"https://sheets.googleapis.com/v4/spreadsheets/\", this.spreadsheetId, \"?key=\", this.apiKey].join(\"\");\n\n            fetch(url).then(function (response) {\n                return response.json();\n            }).then(function (data) {\n                return this.loadSheetsData(data);\n            }.bind(this));\n        } else {\n            console.info(\"You must specify a valid Client ID or API Key\");\n        }\n    },\n\n    loadSheetsData: function loadSheetsData(data) {\n        this.numSheets = data.sheets.length;\n        data.sheets.forEach(function (sheet) {\n            return this.loadSheetViaKey(sheet.properties.title);\n        }, this);\n    },\n\n    loadSpreadsheet: function loadSpreadsheet() {\n        gapi.client.sheets.spreadsheets.get({\n            spreadsheetId: this.spreadsheetId\n        }).then(function (response) {\n            var sheets = JSON.parse(response.body).sheets;\n            this.numSheets = sheets.length;\n            sheets.forEach(this.loadSheetViaAuth, this);\n        }.bind(this));\n    },\n\n    loadSheetViaAuth: function loadSheetViaAuth(sheet) {\n        gapi.client.sheets.spreadsheets.values.get({\n            spreadsheetId: this.spreadsheetId,\n            range: sheet.properties.title\n        }).then(function (response) {\n            var values = JSON.parse(response.body).values;\n            this.loadSheet(sheet.properties.title, values);\n        }.bind(this));\n    },\n\n    loadSheetViaKey: function loadSheetViaKey(sheetName) {\n        var url = [\"https://sheets.googleapis.com/v4/spreadsheets/\", this.spreadsheetId, \"/values/\", sheetName, \"?key=\", this.apiKey].join(\"\");\n\n        fetch(url).then(function (response) {\n            return response.json();\n        }).then(function (json) {\n            var values = json.values;\n            this.loadSheet(sheetName, values);\n        }.bind(this));\n    },\n\n    loadSheet: function loadSheet(sheetName, values) {\n        var headerRow = values[0];\n        var dataRows = values.slice(1);\n        var keys = headerRow.map(function (value) {\n            return camelCase(value);\n        }, this);\n\n        var sheetsData = this.getSheetsData();\n\n        sheetsData = sheetsData.concat({\n            name: sheetName,\n            header: headerRow,\n            keys: keys,\n            data: this.loadRowsData(keys, dataRows)\n        });\n\n        this.setSheetsData(sheetsData);\n    },\n\n    loadRowsData: function loadRowsData(keys, values) {\n        return values.map(function (row) {\n\n            keys.forEach(function (key, i) {\n                row[key] = row[i];\n            });\n\n            return row;\n        });\n    },\n\n    initClient: function initClient() {\n        gapi.client.init({\n            discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\n            clientId: this.clientId,\n            scope: \"https://www.googleapis.com/auth/spreadsheets\"\n        }).then(function () {\n            var authInstance = gapi.auth2.getAuthInstance();\n            if (authInstance.isSignedIn.get()) {\n                this.loadSpreadsheet();\n            } else {\n                authInstance.isSignedIn.listen(this.updateSigninStatus.bind(this));\n                authInstance.signIn();\n            }\n        }.bind(this));\n    },\n\n    updateSigninStatus: function updateSigninStatus(isSignedIn) {\n        if (isSignedIn) {\n            this.loadSpreadsheet();\n        }\n    },\n\n    getSheet: function getSheet(sheetName) {\n        return new SheetData(this.getSheetsData(), sheetName);\n    }\n};\n\nfunction SheetData(sheetsData, sheetName) {\n    var sheet = sheetsData.find(function (sheet) {\n        return sheet.name === sheetName;\n    }) || { data: [], values: [] };\n\n    this.header = sheet.header;\n    this.keys = sheet.keys;\n    var data = sheet.data;\n    var currentData = data.slice();\n\n    this.getData = function () {\n        return data.slice();\n    };\n\n    this.getCurrentData = function () {\n        return currentData.slice();\n    };\n\n    this.setCurrentData = function (newData) {\n        currentData = newData;\n    };\n}\n\nSheetData.prototype = {\n    map: function map(callback) {\n        return this.getCurrentData().map(callback);\n    },\n    filter: function filter(filterObj, strValue) {\n        var newData = this.getData().filter(function (row) {\n            if ((typeof filterObj === \"undefined\" ? \"undefined\" : _typeof(filterObj)) === \"object\") {\n                for (var i in filterObj) {\n                    if (!row.hasOwnProperty(i) || row[i] !== filterObj[i]) {\n                        return false;\n                    }\n                }\n            } else {\n                var colIndex = this.header.indexOf(filterObj);\n                if (row[colIndex] !== strValue) return false;\n            }\n\n            return true;\n        }, this);\n\n        this.setCurrentData(newData);\n\n        return this;\n    },\n    group: function group(colName, sort) {\n        var groups = [];\n        var colIndex = this.header.indexOf(colName);\n\n        if (colIndex === -1) return this;\n\n        this.getCurrentData().forEach(function (row) {\n            var groupName = row[colIndex];\n            var groupIndex = -1;\n\n            groups.forEach(function (group, i) {\n                if (group.name === groupName) groupIndex = i;\n            });\n\n            if (groupIndex > -1) {\n                groups[groupIndex].data.push(row);\n            } else {\n                groups.push({\n                    name: groupName,\n                    data: [row]\n                });\n            }\n        });\n\n        if (sort) sortArray(groups, \"name\");\n\n        this.setCurrentData(groups);\n        this.dataIsGrouped = true;\n\n        return this;\n    },\n    sort: function sort(colName) {\n        var newData = this.getCurrentData();\n        if (this.dataIsGrouped) {\n            newData.forEach(function (group) {\n                sortArray(group.data, camelCase(colName));\n            });\n        } else {\n            sortArray(newData, camelCase(colName));\n        }\n        this.setCurrentData(newData);\n\n        return this;\n    },\n    reverse: function reverse() {\n        var newData = this.getCurrentData();\n        newData.reverse();\n        this.setCurrentData(newData);\n        return this;\n    }\n};\n\nfunction sortArray(array, orderBy) {\n\n    array.sort(function (a, b) {\n        var textA = a[orderBy] ? a[orderBy].toUpperCase() : \"\";\n        var textB = b[orderBy] ? b[orderBy].toUpperCase() : \"\";\n        if (textA < textB) return -1;\n        return textA > textB ? 1 : 0;\n    });\n}\n\nmodule.exports = GoogleSheetConnector;"]},"metadata":{},"sourceType":"script"}